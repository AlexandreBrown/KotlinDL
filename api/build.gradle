dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'org.tensorflow', name: 'tensorflow', version: '1.15.0'
    compile 'com.github.doyaaaaaken:kotlin-csv-jvm:0.7.3' // for csv parsing
    compile 'io.github.microutils:kotlin-logging:1.7.9' // for logging
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'io.jhdf:jhdf:0.5.7' // for hdf5 parsing
    compile 'com.beust:klaxon:5.0.1'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.5.2'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

    // to run on GPU (if CUDA is updated and machine with NVIDIA onboard)
    /*compile 'org.tensorflow:libtensorflow:1.15.0'
    compile 'org.tensorflow:libtensorflow_jni_gpu:1.15.0'*/
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    explicitApiWarning()
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version project.version
            artifact sourcesJar { classifier "sources" }
        }
    }
}

if (hasProperty('bintray_user') && hasProperty('bintray_key')) {
    bintray {

        // property must be set in ~/.gradle/gradle.properties
        user = bintray_user
        key = bintray_key

        publications = ['maven'] //When uploading configuration files

        dryRun = false //Whether to run this as dry-run, without deploying
        publish = true // If version should be auto published after an upload

        pkg {
            repo = 'kotlin-datascience'
            name = 'kotlin-dl'
            vcsUrl = 'https://github.com/zaleslaw/Kotof'
            userOrg = 'kotlin'
            licenses = ['MIT']
            publicDownloadNumbers = true

            //Optional version descriptor
            version {
                name = project.version //Bintray logical version name
                desc = '.'
                released = new Date()
                vcsTag = 'v' + project.version
            }
        }
    }
}